{"version":3,"sources":["assets/logo.svg","assets/wordmark.svg","assets/headshot.jpg","components/NavBar.js","components/Footer.js","api/base.js","pages/Home.js","pages/ContentPage.js","pages/Education.js","pages/Experience.js","pages/Projects.js","pages/Skills.js","components/NewsCard.js","pages/More.js","pages/Biodata.js","pages/NotFoundPage.js","useGATracker.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","NavBar","React","createElement","Navbar","collapseOnSelect","expand","variant","Brand","href","className","src","wordmark","alt","Toggle","aria-controls","Collapse","id","Nav","style","width","NavLink","to","Footer","Container","fluid","Row","Col","target","rel","FontAwesomeIcon","icon","faEnvelope","faLinkedin","faGithubSquare","Airtable","require","configure","apiKey","base","Home","document","title","greetings","setGreetings","useState","useEffect","select","view","eachPage","records","fetchNextPage","class","map","greeting","fields","Image","logo","ContentPage","props","children","Education","pageTitle","setPageTitle","loading","setLoading","items","setItems","modalShow","setModalShow","itemInfo","setItemInfo","Spinner","animation","role","Carousel","fade","item","Item","key","textAlign","onClick","handleClick","Fragment","imgURL","Caption","heading","subheading","Modal","show","onHide","size","fullscreen","aria-labelledby","centered","scrollable","Header","closeButton","closeVariant","backgroundImage","concat","Title","dates","Body","dangerouslySetInnerHTML","__html","detailsHTML","Experience","Projects","Skills","query","setQuery","proficiency","setProficiency","Form","Group","Control","value","onChange","e","placeholder","md","Array","arr","index","FaSun","Button","clear","Table","responsive","filtered","proficiencyRating","skill","toLowerCase","includes","category","aspect","NewsCard","_ref","link","Card","Img","ImgOverlay","Text","source","dateFormatted","More","lg","sm","Biodata","roundedCircle","headshot","filter","hide","row","content","NotFoundPage","useGATracker","location","useLocation","initalized","setInitialized","window","ReactGA","initialize","process","send","hitType","page","pathname","search","App","Routes","Route","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","Router"],"mappings":"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","file":"static/js/main.607ae074.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.c36fd883.svg\";","module.exports = __webpack_public_path__ + \"static/media/wordmark.da6fcb89.svg\";","module.exports = __webpack_public_path__ + \"static/media/headshot.3f20321a.jpg\";","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Nav, Navbar } from 'react-bootstrap';\r\nimport wordmark from '../assets/wordmark.svg';\r\nimport '../style/NavBar.css';\r\n\r\n\r\nconst NavBar = () => {\r\n    return (\r\n        <Navbar collapseOnSelect expand=\"lg\" variant=\"dark\">\r\n            <Navbar.Brand href=\"https://ifteda.com/\">\r\n                <img className=\"nav-wordmark\" src={wordmark} alt=\"ifteda\" />\r\n            </Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                <Nav className=\"justify-content-end\" style={{ width: \"100%\" }}>\r\n                    <NavLink className=\"main-nav\" to=\"/education\">Education</NavLink>\r\n                    <NavLink className=\"main-nav\" to=\"/experience\">Experience</NavLink>\r\n                    <NavLink className=\"main-nav\" to=\"/projects\">Projects</NavLink>\r\n                    <NavLink className=\"main-nav\" to=\"/skills\">Skills</NavLink>\r\n                    <NavLink className=\"main-nav\" to=\"/more\">More</NavLink>\r\n                </Nav>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n    );\r\n};\r\n\r\nexport default NavBar;","import React from 'react';\r\nimport { Col, Container, Row } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEnvelope } from '@fortawesome/free-solid-svg-icons';\r\nimport { faGithubSquare, faLinkedin } from '@fortawesome/free-brands-svg-icons';\r\nimport '../style/Footer.css';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <Container className=\"footer\" fluid>\r\n            <Row>\r\n                <Col className=\"contact\">\r\n                    <div>\r\n                        <a href=\"mailto:contact@ifteda.com\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                            <FontAwesomeIcon icon={faEnvelope} className=\"footer-icon\" />\r\n                        </a>\r\n                        <a href=\"https://www.linkedin.com/in/ifteda/\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                            <FontAwesomeIcon icon={faLinkedin} className=\"footer-icon\" />\r\n                        </a>\r\n                        <a href=\"https://github.com/ifteda\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                            <FontAwesomeIcon icon={faGithubSquare} className=\"footer-icon\" />\r\n                        </a>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Footer;","var Airtable = require(\"airtable\");\r\n\r\n// API_KEY = \"key8zCaRvKaGKZ0rP\";\r\nlet BASE_ID = \"appppWf6pgb7Nkt1J\";\r\nlet PERSONAL_ACCESS_TOKEN = \"patqFH8vnDzJygmLi.c6f0b8d7d41e6a042e94e99ab795e07bf875583f31902e057c8377b0ea8a70e1\";\r\n\r\nAirtable.configure({\r\n    apiKey: PERSONAL_ACCESS_TOKEN\r\n});\r\n\r\nvar base = Airtable.base(BASE_ID);\r\n\r\nexport default base;","import React, { useEffect, useState } from 'react';\r\nimport { Image } from 'react-bootstrap';\r\nimport { NavBar } from '../components';\r\nimport logo from '../assets/logo.svg';\r\nimport base from '../api/base';\r\nimport '../style/Home.css';\r\n\r\nconst Home = () => {\r\n\r\n    document.title = \"Ifteda\";\r\n\r\n    const [greetings, setGreetings] = useState([])\r\n\r\n    useEffect(() => {\r\n        base(\"greeting\")\r\n            .select({ view: \"active\" })\r\n            .eachPage((records, fetchNextPage) => {\r\n                setGreetings(records);\r\n                fetchNextPage();\r\n            })\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"home\">\r\n            <NavBar />\r\n            <div class=\"text-container\">\r\n                <div className=\"greeting-container\">\r\n                    {greetings.map(greeting =>\r\n                        <span className=\"greeting\">{greeting.fields.greeting}</span>\r\n                    )}\r\n                </div>\r\n            </div>\r\n\r\n            <Image fluid className=\"logo\" src={logo} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;","import React from 'react';\r\nimport { NavBar, Footer } from '../components';\r\nimport '../style/Page.css';\r\n\r\nconst ContentPage = (props) => {\r\n    return (\r\n        <div className=\"page\">\r\n            <NavBar />\r\n            {props.children}\r\n            <Footer />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport { ContentPage }","import React, { useEffect, useState } from 'react';\r\nimport { Carousel, Container, Image, Modal, Row, Spinner } from 'react-bootstrap';\r\nimport { ContentPage } from './ContentPage';\r\nimport base from '../api/base';\r\n\r\nconst Education = () => {\r\n\r\n    const [pageTitle, setPageTitle] = useState();\r\n    const [loading, setLoading] = useState(true);\r\n    const [items, setItems] = useState([])\r\n    const [modalShow, setModalShow] = useState(false);\r\n    const [itemInfo, setItemInfo] = useState({});\r\n\r\n    const handleClick = (itemInfo) => {\r\n        setPageTitle(itemInfo.pageTitle);\r\n        setModalShow(true);\r\n        setItemInfo(itemInfo);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (!modalShow) { setPageTitle(\"Education\") };\r\n        document.title = pageTitle;\r\n    }, [modalShow, pageTitle])\r\n\r\n    useEffect(() => {\r\n        base(\"education\")\r\n            .select({ view: \"active\" })\r\n            .eachPage((records, fetchNextPage) => {\r\n                setItems(records);\r\n                setLoading(false);\r\n                fetchNextPage();\r\n            })\r\n    }, [])\r\n\r\n    return (\r\n        <ContentPage>\r\n            {loading ? (\r\n                <Container fluid>\r\n                <Row className=\"spinner-row\">\r\n                    <Spinner animation=\"border\" role=\"status\">\r\n                        <span className=\"visually-hidden\">Loading...</span>\r\n                    </Spinner>\r\n                </Row>\r\n                </Container>\r\n            ) : (\r\n                <Carousel fade>\r\n                    {items.map(item => (\r\n                        <Carousel.Item key={item.id} style={{ textAlign: 'center' }}>\r\n                            <button onClick={() => handleClick(item.fields)}>\r\n                                <>\r\n                                    <Image fluid className=\"carousel-img\" src={item.fields.imgURL} />\r\n                                    <Carousel.Caption>\r\n                                        <h3>{item.fields.heading}</h3>\r\n                                        <p>{item.fields.subheading}</p>\r\n                                    </Carousel.Caption>\r\n                                </>\r\n                            </button>\r\n                            <Modal\r\n                                show={modalShow}\r\n                                onHide={() => setModalShow(false)}\r\n                                size=\"xl\"\r\n                                fullscreen=\"md-down\"\r\n                                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                                centered\r\n                                scrollable\r\n                            >\r\n                                <Modal.Header closeButton closeVariant=\"white\"\r\n                                style={{\r\n                                    backgroundImage: `url(${itemInfo.imgURL})`\r\n                                }}>\r\n                                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                                        <h1>{itemInfo.heading}</h1>\r\n                                        <h3>{itemInfo.subheading}</h3>\r\n                                        <h4>{itemInfo.dates}</h4>\r\n                                    </Modal.Title>\r\n                                </Modal.Header>\r\n                                <Modal.Body>\r\n                                    <div dangerouslySetInnerHTML={{ __html: itemInfo.detailsHTML}} />\r\n                                </Modal.Body>\r\n                            </Modal>\r\n                        </Carousel.Item>\r\n                    ))}\r\n                </Carousel>\r\n            )}\r\n        </ContentPage>\r\n    );\r\n};\r\n\r\nexport default Education;","import React, { useEffect, useState } from 'react';\r\nimport { Carousel, Container, Image, Modal, Row, Spinner } from 'react-bootstrap';\r\nimport { ContentPage } from './ContentPage';\r\nimport base from '../api/base';\r\n\r\nconst Experience = () => {\r\n\r\n    const [pageTitle, setPageTitle] = useState();\r\n    const [loading, setLoading] = useState(true);\r\n    const [items, setItems] = useState([])\r\n    const [modalShow, setModalShow] = useState(false);\r\n    const [itemInfo, setItemInfo] = useState({});\r\n\r\n    const handleClick = (itemInfo) => {\r\n        setPageTitle(itemInfo.pageTitle);\r\n        setModalShow(true);\r\n        setItemInfo(itemInfo);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (!modalShow) { setPageTitle(\"Experience\") };\r\n        document.title = pageTitle;\r\n    }, [modalShow, pageTitle])\r\n\r\n    useEffect(() => {\r\n        base(\"experience\")\r\n            .select({ view: \"active\" })\r\n            .eachPage((records, fetchNextPage) => {\r\n                setItems(records);\r\n                setLoading(false);\r\n                fetchNextPage();\r\n            })\r\n    }, [])\r\n\r\n    return (\r\n        <ContentPage>\r\n            {loading ? (\r\n                <Container fluid>\r\n                <Row className=\"spinner-row\">\r\n                    <Spinner animation=\"border\" role=\"status\">\r\n                        <span className=\"visually-hidden\">Loading...</span>\r\n                    </Spinner>\r\n                </Row>\r\n                </Container>\r\n            ) : (\r\n                <Carousel fade>\r\n                    {items.map(item => (\r\n                        <Carousel.Item key={item.id} style={{ textAlign: 'center' }}>\r\n                            <button onClick={() => handleClick(item.fields)}>\r\n                                <>\r\n                                    <Image fluid className=\"carousel-img\" src={item.fields.imgURL} />\r\n                                    <Carousel.Caption>\r\n                                        <h3>{item.fields.heading}</h3>\r\n                                        <p>{item.fields.subheading}</p>\r\n                                    </Carousel.Caption>\r\n                                </>\r\n                            </button>\r\n                            <Modal\r\n                                show={modalShow}\r\n                                onHide={() => setModalShow(false)}\r\n                                size=\"xl\"\r\n                                fullscreen=\"md-down\"\r\n                                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                                centered\r\n                                scrollable\r\n                            >\r\n                                <Modal.Header closeButton closeVariant=\"white\"\r\n                                style={{\r\n                                    backgroundImage: `url(${itemInfo.imgURL})`\r\n                                }}>\r\n                                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                                        <h1>{itemInfo.heading}</h1>\r\n                                        <h3>{itemInfo.subheading}</h3>\r\n                                        <h4>{itemInfo.dates}</h4>\r\n                                    </Modal.Title>\r\n                                </Modal.Header>\r\n                                <Modal.Body>\r\n                                    <div dangerouslySetInnerHTML={{ __html: itemInfo.detailsHTML}} />\r\n                                </Modal.Body>\r\n                            </Modal>\r\n                        </Carousel.Item>\r\n                    ))}\r\n                </Carousel>\r\n            )}\r\n        </ContentPage>\r\n    );\r\n};\r\n\r\nexport default Experience;","import React, { useEffect, useState } from 'react';\r\nimport { Carousel, Container, Image, Modal, Row, Spinner } from 'react-bootstrap';\r\nimport { ContentPage } from './ContentPage';\r\nimport base from '../api/base';\r\n\r\nconst Projects = () => {\r\n\r\n    const [pageTitle, setPageTitle] = useState();\r\n    const [loading, setLoading] = useState(true);\r\n    const [items, setItems] = useState([])\r\n    const [modalShow, setModalShow] = useState(false);\r\n    const [itemInfo, setItemInfo] = useState({});\r\n\r\n    const handleClick = (itemInfo) => {\r\n        setPageTitle(itemInfo.pageTitle);\r\n        setModalShow(true);\r\n        setItemInfo(itemInfo);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (!modalShow) { setPageTitle(\"Projects\") };\r\n        document.title = pageTitle;\r\n    }, [modalShow, pageTitle])\r\n\r\n    useEffect(() => {\r\n        base(\"projects\")\r\n            .select({ view: \"active\" })\r\n            .eachPage((records, fetchNextPage) => {\r\n                setItems(records);\r\n                setLoading(false);\r\n                fetchNextPage();\r\n            })\r\n    }, [])\r\n\r\n    return (\r\n        <ContentPage>\r\n            {loading ? (\r\n                <Container fluid>\r\n                <Row className=\"spinner-row\">\r\n                    <Spinner animation=\"border\" role=\"status\">\r\n                        <span className=\"visually-hidden\">Loading...</span>\r\n                    </Spinner>\r\n                </Row>\r\n                </Container>\r\n            ) : (\r\n                <Carousel fade>\r\n                    {items.map(item => (\r\n                        <Carousel.Item key={item.id} style={{ textAlign: 'center' }}>\r\n                            <button onClick={() => handleClick(item.fields)}>\r\n                                <>\r\n                                    <Image fluid className=\"carousel-img\" src={item.fields.imgURL} />\r\n                                    <Carousel.Caption>\r\n                                        <h3>{item.fields.heading}</h3>\r\n                                        <p>{item.fields.subheading}</p>\r\n                                    </Carousel.Caption>\r\n                                </>\r\n                            </button>\r\n                            <Modal\r\n                                show={modalShow}\r\n                                onHide={() => setModalShow(false)}\r\n                                size=\"xl\"\r\n                                fullscreen=\"md-down\"\r\n                                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                                centered\r\n                                scrollable\r\n                            >\r\n                                <Modal.Header closeButton closeVariant=\"white\"\r\n                                style={{\r\n                                    backgroundImage: `url(${itemInfo.imgURL})`\r\n                                }}>\r\n                                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                                        <h1>{itemInfo.heading}</h1>\r\n                                        <h3>{itemInfo.subheading}</h3>\r\n                                        <h4>{itemInfo.dates}</h4>\r\n                                    </Modal.Title>\r\n                                </Modal.Header>\r\n                                <Modal.Body>\r\n                                    <div dangerouslySetInnerHTML={{ __html: itemInfo.detailsHTML}} />\r\n                                </Modal.Body>\r\n                            </Modal>\r\n                        </Carousel.Item>\r\n                    ))}\r\n                </Carousel>\r\n            )}\r\n        </ContentPage>\r\n    );\r\n};\r\n\r\nexport default Projects;","import React, { useEffect, useState } from 'react';\r\nimport { Button, Col, Container, Form, Row, Spinner, Table } from 'react-bootstrap';\r\nimport { FaSun } from 'react-icons/fa';\r\nimport { ContentPage } from './ContentPage';\r\nimport base from '../api/base';\r\nimport '../style/Skills.css';\r\n\r\nconst Skills = () => {\r\n\r\n    document.title = \"Skills\";\r\n    const [loading, setLoading] = useState(true);\r\n    const [items, setItems] = useState([])\r\n    const [query, setQuery] = useState(\"\")\r\n    const [proficiency, setProficiency] = useState(1)\r\n\r\n    const filtered = (fields) => {\r\n        return fields.proficiencyRating >= proficiency\r\n            && (\r\n                fields.skill.toLowerCase().includes(query.toLowerCase())\r\n                || fields.category.toLowerCase().includes(query.toLowerCase())\r\n                || fields.aspect.toLowerCase().includes(query.toLowerCase())\r\n            )\r\n    }\r\n\r\n    const clear = () => {\r\n        setQuery(\"\")\r\n        setProficiency(1)\r\n    }\r\n\r\n    useEffect(() => {\r\n        base(\"skills\")\r\n            .select({ view: \"active\" })\r\n            .eachPage((records, fetchNextPage) => {\r\n                setItems(records);\r\n                setLoading(false);\r\n                fetchNextPage();\r\n            })\r\n    }, [])\r\n\r\n    return (\r\n        <ContentPage>\r\n            <Container fluid className=\"skills\">\r\n                <Form>\r\n                    <Row className=\"search-row\">\r\n                        <Col className=\"skills-col\">\r\n                            <Form.Group className=\"mb-3\">\r\n                                <Form.Control\r\n                                    value={query}\r\n                                    onChange={e => setQuery(e.target.value)}\r\n                                    placeholder=\"Search...\" />\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col className=\"skills-col\" md=\"auto\">\r\n                            Proficiency:{\" \"}\r\n                            {[...new Array(3)].map((arr, index) => {\r\n                                return index < proficiency ? <FaSun className=\"rating-active\" onClick={() => { setProficiency(index + 1) }} /> : <FaSun className=\"rating-inactive\" onClick={() => { setProficiency(index + 1) }} />;\r\n                            })}\r\n                        </Col>\r\n                        <Col className=\"skills-col\" md=\"auto\">\r\n                            <Form.Group>\r\n                                <Button onClick={clear}>Clear</Button>\r\n                            </Form.Group>\r\n                        </Col>\r\n                    </Row>\r\n                </Form>\r\n                {loading ? (\r\n                    <Row className=\"spinner-row\">\r\n                        <Spinner animation=\"border\" role=\"status\">\r\n                            <span className=\"visually-hidden\">Loading...</span>\r\n                        </Spinner>\r\n                    </Row>\r\n                ) : (\r\n                    <Row>\r\n                        <Table responsive>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Skill</th>\r\n                                    <th>Category</th>\r\n                                    <th>Proficiency</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {items.map(item =>\r\n                                    filtered(item.fields) &&\r\n                                    (\r\n                                        <tr>\r\n                                            <td>{item.fields.skill}</td>\r\n                                            <td>{item.fields.category}</td>\r\n                                            <td>\r\n                                                {[...new Array(3)].map((arr, index) => {\r\n                                                    return index < item.fields.proficiencyRating ? <FaSun className=\"rating-active\" /> : <FaSun className=\"rating-inactive\" />;\r\n                                                })}\r\n                                            </td>\r\n                                        </tr>\r\n                                    )\r\n                                )}\r\n                            </tbody>\r\n                        </Table>\r\n                    </Row>\r\n                )}\r\n            </Container>\r\n        </ContentPage>\r\n    );\r\n\r\n};\r\n\r\nexport default Skills;","import React from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport '../style/More.css';\r\n\r\nconst NewsCard = ({ item }) => {\r\n    return (\r\n        <a className=\"card-link\" href={item.link} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            <Card>\r\n                <Card.Header><br /></Card.Header>\r\n                <Card.Img src={item.imgURL} />\r\n\r\n                <Card.ImgOverlay>\r\n                    <Card.Title>{item.heading}</Card.Title>\r\n                    <Card.Text>\r\n                        {item.subheading}\r\n                    </Card.Text>\r\n                </Card.ImgOverlay>\r\n\r\n                <Card.Footer>\r\n                    <i>{item.source}</i>\r\n                    <br />\r\n                    {item.dateFormatted}\r\n                </Card.Footer>\r\n            </Card>\r\n        </a>\r\n    );\r\n}\r\n\r\nexport default NewsCard;","import React, { useEffect, useState } from 'react';\r\nimport { Col, Container, Row, Spinner } from 'react-bootstrap';\r\nimport { ContentPage } from './ContentPage';\r\nimport NewsCard from '../components/NewsCard';\r\nimport base from '../api/base';\r\n\r\nconst More = () => {\r\n\r\n    document.title = \"More\";\r\n    const [loading, setLoading] = useState(true);\r\n    const [items, setItems] = useState([])\r\n\r\n    useEffect(() => {\r\n        base(\"news\")\r\n            .select({ view: \"active\" })\r\n            .eachPage((records, fetchNextPage) => {\r\n                setItems(records);\r\n                setLoading(false);\r\n                fetchNextPage();\r\n            })\r\n    }, [])\r\n\r\n    return (\r\n        <ContentPage>\r\n            <Container fluid>\r\n                {loading ? (\r\n                    <Row className=\"spinner-row\">\r\n                        <Spinner animation=\"border\" role=\"status\">\r\n                            <span className=\"visually-hidden\">Loading...</span>\r\n                        </Spinner>\r\n                    </Row>\r\n                ) : (\r\n                    <Row className=\"d-flex justify-content-left\">\r\n                        {items.map(item =>\r\n                        <Col key={item.id} lg={4} md={6} sm={12}>\r\n                            <NewsCard item={item.fields} />\r\n                        </Col>\r\n                        )}\r\n                    </Row>\r\n                )}\r\n            </Container>\r\n        </ContentPage>\r\n    );\r\n};\r\n\r\nexport default More;","import React, { useEffect, useState } from 'react';\r\nimport { Col, Container, Image, Row, Spinner } from 'react-bootstrap';\r\nimport { ContentPage } from './ContentPage';\r\nimport headshot from  '../assets/headshot.jpg';\r\nimport base from '../api/base';\r\nimport '../style/Biodata.css';\r\n\r\nconst Biodata = () => {\r\n\r\n    document.title = \"Biodata\";\r\n    const [loading, setLoading] = useState(true);\r\n    const [items, setItems] = useState([])\r\n\r\n    useEffect(() => {\r\n        base(\"biodata\")\r\n            .select({ view: \"all\" })\r\n            .eachPage((records, fetchNextPage) => {\r\n                setItems(records);\r\n                setLoading(false);\r\n                fetchNextPage();\r\n            })\r\n    }, [])\r\n\r\n    return (\r\n        <ContentPage>\r\n            <Container className=\"biodata-container\" fluid>\r\n                <Row className=\"biodata-row\">\r\n                    <Col className=\"biodata-col\" md=\"auto\">\r\n                        <Image fluid roundedCircle src={headshot} />\r\n                    </Col>\r\n                    {loading ? (\r\n                        <Col className=\"biodata-col spinner-col\">\r\n                            <Spinner animation=\"border\" role=\"status\">\r\n                                <span className=\"visually-hidden\">Loading...</span>\r\n                            </Spinner>\r\n                        </Col>\r\n                    ) : (\r\n                        <Col className=\"biodata-col\" md=\"auto\" >\r\n                            {items.filter(item => item.fields.hide == null || items.fields.hide === false).map(item => (\r\n                                <p className=\"biodata-content\">\r\n                                <strong className=\"biodata-rowName\">{item.fields.row}: {' '}</strong>\r\n                                {item.fields.content}\r\n                                </p>\r\n                            ))}\r\n                        </Col>\r\n                    )}\r\n                </Row>\r\n            </Container>\r\n        </ContentPage>\r\n    );\r\n};\r\n\r\nexport default Biodata;","import React from 'react';\r\nimport { Col, Container, Row } from 'react-bootstrap';\r\nimport logo from '../assets/logo.svg';\r\nimport '../style/NotFoundPage.css';\r\n\r\nconst NotFoundPage = () => {\r\n    document.title = \"Page Not Found\";\r\n\r\n    return (\r\n        <Container className=\"not-found\" fluid>\r\n            <Row>\r\n                <Col>\r\n                    <img className=\"not-found-logo\" src={logo} alt=\"ifteda\" />\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                    <p>\r\n                        <h1>Oops!</h1>\r\n                        The page you requested does not exist.\r\n                        <br />\r\n                        <strong><a href=\"/\">Let's head home.</a></strong>\r\n                    </p>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default NotFoundPage;","import { useEffect, useState } from 'react';\r\nimport { useLocation } from 'react-router';\r\nimport ReactGA from 'react-ga4';\r\n\r\n  const useGATracker = () => {\r\n      const location = useLocation();\r\n      const [initalized, setInitialized] = useState(false);\r\n\r\n      useEffect(() => {\r\n          if (!window.location.href.includes(\"localhost\")) {\r\n              ReactGA.initialize(process.env.REACT_APP_GA_TRACKING_ID);\r\n              setInitialized(true);\r\n          }\r\n      }, []);\r\n\r\n      useEffect(() => {\r\n          if (initalized) {\r\n            ReactGA.send({ hitType: \"pageview\", page: location.pathname + location.search});\r\n          }\r\n      }, [initalized, location]);\r\n  };\r\n\r\n  export default useGATracker;","import React from 'react';\r\nimport { Routes, Route } from 'react-router-dom';\r\nimport { Home, Education, Experience, Projects, Skills, More, Biodata, NotFoundPage} from './pages';\r\nimport useGATracker from './useGATracker';\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nfunction App() {\r\n\r\n  useGATracker();\r\n\r\n  return (\r\n    <Routes>\r\n      <Route path=\"/\" element={<Home />} />\r\n      <Route path=\"education\" element={<Education />} />\r\n      <Route path=\"experience\" element={<Experience />} />\r\n      <Route path=\"projects\" element={<Projects />} />\r\n      <Route path=\"skills\" element={<Skills />} />\r\n      <Route path=\"more\" element={<More />} />\r\n      <Route path=\"biodata\" element={<Biodata />} />\r\n      <Route path=\"*\" element={<NotFoundPage />} />\r\n    </Routes>\r\n  );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport { HashRouter as Router } from 'react-router-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.createRoot(document.getElementById('root'))\r\n.render(\r\n  <React.StrictMode>\r\n    <Router>\r\n      <App />\r\n    </Router>\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();"],"sourceRoot":""}